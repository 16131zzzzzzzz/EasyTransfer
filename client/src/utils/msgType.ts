export function isLinkMessage(text: string): boolean {
  return !!urlPattern.test(text)
}

export function isImageType(name: string): boolean {
  return imageFormats.some(format => name.toLowerCase().endsWith(format))
}

export function decideFileType(name: string): string {
  const fileName = name.toLowerCase()
  for (const [icon, formats] of Object.entries(fileTypeMap)) {
    if (formats.some(format => fileName.endsWith(format))) {
      return icon
    }
  }

  return 'mdi-file-document'
}

const urlPattern = new RegExp(
  '^(?!mailto:)(?:(?:http|https|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$',
  'i', // fragment locator
)

const imageFormats = [
  '.png',
  '.jpg',
  '.jpeg',
  '.gif',
  '.bmp',
  '.webp',
  '.svg',
  '.ico',
  '.tiff',
  '.tif',
  '.heic',
  '.raw',
]

const fileTypeMap: { [key: string]: string[] } = {
  'mdi-file-image': imageFormats,
  'mdi-file-word': ['.doc', '.docx', '.odt', '.rtf', '.txt', '.wps', '.wpd'],
  'mdi-file-table': ['.xls', '.xlsx', '.ods', '.csv', '.tsv', '.xlsm', '.xlsb'],
  'mdi-file-powerpoint': [
    '.ppt',
    '.pptx',
    '.odp',
    '.pps',
    '.ppsx',
    '.pot',
    '.potx',
  ],
  'mdi-file-music': [
    '.mp3',
    '.wav',
    '.flac',
    '.ogg',
    '.aac',
    '.wma',
    '.m4a',
    '.aiff',
    '.alac',
  ],
  'mdi-file-video': [
    '.mp4',
    '.mkv',
    '.avi',
    '.mov',
    '.wmv',
    '.flv',
    '.webm',
    '.mpeg',
    '.mpg',
    '.m4v',
    '.3gp',
    '.3g2',
  ],
  'mdi-file-code': [
    '.html',
    '.css',
    '.js',
    '.ts',
    '.jsx',
    '.tsx',
    '.json',
    '.xml',
    '.yaml',
    '.yml',
    '.md',
    '.markdown',
    '.cpp',
    '.c',
    '.h',
    '.hpp',
    '.java',
    '.py',
    '.rb',
    '.php',
    '.sql',
    '.sh',
    '.bat',
    '.ps1',
    '.psm1',
    '.psd1',
    '.ps1xml',
    '.pssc',
    '.psc1',
    '.pssc',
    '.pl',
    '.perl',
    '.go',
    '.rs',
    '.swift',
    '.kt',
    '.kts',
    '.clj',
    '.cljs',
    '.scala',
    '.groovy',
    '.gradle',
    '.dockerfile',
    '.properties',
    '.ini',
    '.cfg',
    '.conf',
    '.toml',
    '.yaml',
    '.yml',
    '.json',
    '.xml',
    '.csv',
    '.tsv',
    '.log',
    '.r',
    '.sas',
    '.stata',
    '.do',
    '.m',
    '.mat',
    '.rmd',
    '.ipynb',
  ],
  'mdi-folder-zip': [
    '.zip',
    '.rar',
    '.7z',
    '.tar',
    '.gz',
    '.bz2',
    '.xz',
    '.lz',
    '.lzma',
    '.lzo',
    '.zst',
    '.z',
    '.tar.gz',
    '.tgz',
    '.tar.bz2',
    '.tbz2',
    '.tar.xz',
    '.txz',
    '.tar.lz',
    '.tlz',
    '.tar.lzma',
    '.tar.lzo',
    '.tar.zst',
    '.tzst',
  ],
  'mdi-file-cad': [
    '.dwg',
    '.dxf',
    '.dgn',
    '.stl',
    '.obj',
    '.fbx',
    '.3ds',
    '.skp',
    '.step',
    '.stp',
    '.igs',
    '.iges',
    '.x_t',
    '.x_b',
    '.sat',
    '.sab',
    '.3dm',
    '.prt',
    '.asm',
    '.xas',
    '.xpr',
  ],
  'mdi-file-key': [
    '.key',
    '.pem',
    '.pub',
    '.asc',
    '.gpg',
    '.pgp',
    '.p12',
    '.pfx',
    '.cer',
    '.crt',
    '.der',
    '.keychain',
    '.jks',
    '.keystore',
    '.bks',
    '.pkcs12',
    '.p7b',
    '.p7c',
    '.p7r',
    '.p7s',
    '.p8',
  ],
}
